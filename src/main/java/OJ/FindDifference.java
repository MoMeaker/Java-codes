package OJ;

/**
 * Created by YYT on 2016/10/18.
 * Given two strings s and t which consist of only lowercase letters.

 *String t is generated by random shuffling string s and then add one more letter at a random position.
 *Find the letter that was added in t.
 *
 *Example:
 *Input:
 *s = "abcd"
 *t = "abcde"
 *Output:
 *e
 简单的说就是t是由s打乱后并在某一个位置插入了一份字母，写算法输出这个字母
 *Explanation:
 *'e' is the letter that was added.
 */
public class FindDifference {
    /**
     * 我的想法是两次循环依次，判断t中字母是否在s中出现过
     * 出现就不是新加入的，依次移动。知道找到或者遍历到t的末尾
     * 最坏情况下的时间复杂度为O(n)
     * @param s
     * @param t
     * @return
     */
    public char findTheDifference(String s, String t) {
        char[] tchars = t.toCharArray();
        int tIDX = 0;
        String tchar = "" + tchars[tIDX];
        while(s.length()>0 && s.contains(tchar)){
            s = s.replaceFirst(tchar, "");
            tIDX++;
            tchar = "" + tchars[tIDX];
        }
        return tchars[tIDX];
    }

    public static void main(String[] args) {
        FindDifference o = new FindDifference();
        System.out.println(o.findTheDifference("abcd","abdec"));
    }
}
